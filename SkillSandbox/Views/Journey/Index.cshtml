@model IEnumerable<SkillSandbox.Models.JourneyStage>
@{
    ViewData["Title"] = "My SkillSandbox Journey";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-12">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h3 class="mb-0">My SkillSandbox Journey</h3>
                </div>
                <div class="card-body">
                    <div class="timeline">
                        @foreach (var stage in Model)
                        {
                            <div class="timeline-item">
                                <div class="timeline-marker @GetStatusColor(stage.Status)"></div>
                                <div class="timeline-content">
                                    <div class="card">
                                        <div class="card-body">
                                            <h5 class="card-title">@GetStageTitle(stage.StageType)</h5>
                                            <div class="d-flex justify-content-between align-items-center mb-3">
                                                <span class="badge @GetStatusBadgeColor(stage.Status)">
                                                    @stage.Status
                                                </span>
                                                @if (stage.StartedAt.HasValue)
                                                {
                                                    <small class="text-muted">
                                                        Started: @stage.StartedAt.Value.ToString("MMM dd, yyyy")
                                                    </small>
                                                }
                                            </div>
                                            <p class="card-text">@GetStageDescription(stage.StageType)</p>
                                            @if (!string.IsNullOrEmpty(stage.Notes))
                                            {
                                                <div class="alert alert-info">
                                                    <strong>Notes:</strong> @stage.Notes
                                                </div>
                                            }
                                            <div class="btn-group">
                                                <a asp-action="StageDetails" asp-route-id="@stage.Id" class="btn btn-info btn-sm">Details</a>
                                                @if (stage.Status == JourneyStageStatus.NotStarted)
                                                {
                                                    <form asp-action="UpdateStageStatus" method="post" class="d-inline">
                                                        <input type="hidden" name="stageId" value="@stage.Id" />
                                                        <input type="hidden" name="status" value="@JourneyStageStatus.InProgress" />
                                                        <button type="submit" class="btn btn-primary btn-sm">Start</button>
                                                    </form>
                                                }
                                                else if (stage.Status == JourneyStageStatus.InProgress)
                                                {
                                                    <form asp-action="UpdateStageStatus" method="post" class="d-inline">
                                                        <input type="hidden" name="stageId" value="@stage.Id" />
                                                        <input type="hidden" name="status" value="@JourneyStageStatus.Completed" />
                                                        <button type="submit" class="btn btn-success btn-sm">Complete</button>
                                                    </form>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .timeline {
        position: relative;
        padding: 20px 0;
    }

    .timeline-item {
        position: relative;
        padding-left: 30px;
        margin-bottom: 30px;
    }

    .timeline-marker {
        position: absolute;
        left: 0;
        top: 0;
        width: 20px;
        height: 20px;
        border-radius: 50%;
    }

    .timeline-content {
        position: relative;
    }

    .timeline-content::before {
        content: '';
        position: absolute;
        left: -30px;
        top: 0;
        bottom: -30px;
        width: 2px;
        background: #e9ecef;
    }

    .timeline-item:last-child .timeline-content::before {
        display: none;
    }
</style>

@functions {
    private string GetStatusColor(JourneyStageStatus status)
    {
        return status switch
        {
            JourneyStageStatus.NotStarted => "bg-secondary",
            JourneyStageStatus.InProgress => "bg-warning",
            JourneyStageStatus.Completed => "bg-success",
            JourneyStageStatus.Failed => "bg-danger",
            _ => "bg-secondary"
        };
    }

    private string GetStatusBadgeColor(JourneyStageStatus status)
    {
        return status switch
        {
            JourneyStageStatus.NotStarted => "bg-secondary",
            JourneyStageStatus.InProgress => "bg-warning",
            JourneyStageStatus.Completed => "bg-success",
            JourneyStageStatus.Failed => "bg-danger",
            _ => "bg-secondary"
        };
    }

    private string GetStageTitle(JourneyStageType stageType)
    {
        return stageType switch
        {
            JourneyStageType.JourneyStart => "Your SkillSandbox Journey Starts Here",
            JourneyStageType.WorkReadinessAssessment => "Work-Readiness Assessment",
            JourneyStageType.Consultation => "Consultation with SkillSandbox",
            JourneyStageType.Interviews => "Interviews",
            JourneyStageType.Enrollment => "Enrollment",
            JourneyStageType.Training => "Training",
            JourneyStageType.Internship => "Internship",
            JourneyStageType.Placement => "Placement",
            _ => stageType.ToString()
        };
    }

    private string GetStageDescription(JourneyStageType stageType)
    {
        return stageType switch
        {
            JourneyStageType.JourneyStart => "Begin your journey with SkillSandbox. This is where your transformation starts.",
            JourneyStageType.WorkReadinessAssessment => "Complete a comprehensive assessment to understand your current skill level and areas for improvement.",
            JourneyStageType.Consultation => "Meet with our experts for personalized advice and guidance on your career path.",
            JourneyStageType.Interviews => "Participate in interviews to ensure you're ready and a good fit for our program.",
            JourneyStageType.Enrollment => "Complete the official registration process to join our program.",
            JourneyStageType.Training => "Engage in skill-building workshops, gain hands-on workplace experience, and receive mentorship.",
            JourneyStageType.Internship => "Get deployed to partner companies for real-world experience.",
            JourneyStageType.Placement => "Transition into full-time employment with our partner companies.",
            _ => "Description not available"
        };
    }
} 